---
import Index from "../layouts/index.astro";
import { BusStopSchema } from "../types/busStop";
import { differenceInMinutes } from "date-fns";
import { utcToZonedTime } from "date-fns-tz";
type BusStopType = Zod.infer<typeof BusStopSchema>;
const data = (await (
  await fetch("https://plan-tan.fr/referentiel/getstoplines?stopId=1747")
).json()) as BusStopType;
BusStopSchema.parse(data);

const timeLeft = (time: string) => {
  const [hour, minute] = time.split(":").map(Number);
  console.log(hour, minute);
  if (hour === undefined || minute === undefined) return 0;
  const departureTime = utcToZonedTime(new Date(), "Europe/Paris");
  console.log(departureTime);
  departureTime.setHours(hour);
  departureTime.setMinutes(minute);

  // Get the current time in the Paris time zone
  const now = utcToZonedTime(new Date(), "Europe/Paris");
  console.log(now);
  console.log(departureTime);
  // Calculate the time difference between the current time and the departure time
  const timeDiff = differenceInMinutes(departureTime, now);
  return timeDiff;
};
---

<Index>
  <h1>Prochain DÃ©part :</h1>
  {
    data.nextDeparture["128_1"].map((departure) => (
      <div>
        <b>{timeLeft(departure)} </b> min
      </div>
    ))
  }
</Index>

<style>
  h1,
  b {
    color: #beabd0;
  }
</style>
